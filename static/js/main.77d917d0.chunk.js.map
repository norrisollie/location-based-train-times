{"version":3,"sources":["Components/Postcode.js","Components/ServiceInfo.js","Components/Service.js","Components/Station.js","App.js","reportWebVitals.js","index.js"],"names":["Postcode","this","props","postcode","Component","ServiceInfo","selectedStationName","name","style","fontWeight","departureTime","Service","state","servicesLoaded","serviceInfo","e","url","stopPropagation","fetch","then","response","json","data","setState","prevState","console","log","stops","length","map","stop","station_name","selectedStationCode","aimed_departure_time","station_code","onClick","serviceClickHandler","serviceUrl","departTime","destination","Station","timetableLoaded","timetable","code","departures","all","services","service","destination_name","service_timetable","id","train_uid","stationClickHandler","App","success","position","latitude","coords","longitude","getNearestStations","postcodes","stationList","navigator","geolocation","getCurrentPosition","error","arr","property","reduce","memo","x","push","types","groupBy","member","train_station","stations","station","getCurrentLocation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77d917d0.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nexport default class Postcode extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>{`By using your location provided by the browser, it looks like you are in the ${this.props.postcode} postcode. Your nearest train stations are:`}</div>\n\t\t);\n\t}\n}\n","import React, {Component} from \"react\";\n\nexport default class ServiceInfo extends Component {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\trender() {\n\t\tif (this.props.selectedStationName === this.props.name) {\n\t\t\treturn (\n\t\t\t\t<li style={{fontWeight: \"bold\"}}>\n\t\t\t\t\t{this.props.departureTime + \" - \" + this.props.name}\n\t\t\t\t</li>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <li>{this.props.departureTime + \" - \" + this.props.name}</li>;\n\t\t}\n\t}\n}\n","import React, {Component} from \"react\";\nimport ServiceInfo from \"./ServiceInfo\";\n\nexport default class Service extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tservicesLoaded: false,\n\t\t\tserviceInfo: [],\n\t\t};\n\t}\n\n\tserviceClickHandler(e, url) {\n\t\te.stopPropagation();\n\t\tfetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\tservicesLoaded: !prevState.servicesLoaded,\n\t\t\t\t\t\t\tserviceInfo: data,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconsole.log(this.state.serviceInfo);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.serviceInfo);\n\n\t\tlet stops;\n\n\t\tif (this.state.serviceInfo.length !== 0) {\n\t\t\tstops = this.state.serviceInfo.stops.map((stop) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ServiceInfo\n\t\t\t\t\t\tkey={stop.station_code}\n\t\t\t\t\t\tname={stop.station_name}\n\t\t\t\t\t\tselectedStationName={this.props.selectedStationName}\n\t\t\t\t\t\tselectedStationCode={this.props.selectedStationCode}\n\t\t\t\t\t\tdepartureTime={stop.aimed_departure_time}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tthis.serviceClickHandler(e, this.props.serviceUrl);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{`${this.props.departTime} to ${this.props.destination}`}\n\t\t\t\t<ul>{stops}</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n","import React, {Component} from \"react\";\n\nimport Service from \"./Service\";\n\nexport default class Station extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tselectedStationName: null,\n\t\t\tselectedStationCode: null,\n\t\t\ttimetableLoaded: false,\n\t\t\ttimetable: [],\n\t\t};\n\t}\n\n\tstationClickHandler(e, code) {\n\t\te.stopPropagation();\n\t\tfetch(\n\t\t\t`https://transportapi.com/v3/uk/train/station/${code}///live.json?app_id=c15b5dbb&app_key=1cfe30d14a3934983892bed20b27e431&train_status=passenger`\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\ttimetableLoaded: !prevState.timetableLoaded,\n\t\t\t\t\t\t\ttimetable: data.departures.all,\n\t\t\t\t\t\t\tselectedStationName: data.station_name,\n\t\t\t\t\t\t\tselectedStationCode: data.station_code,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconsole.log(this.state);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttimetable,\n\t\t\ttimetableLoaded,\n\t\t\tselectedStationName,\n\t\t\tselectedStationCode,\n\t\t} = this.state;\n\t\tconst {code, name} = this.props;\n\n\t\tlet services;\n\t\tif (!timetable.length < 1 && timetableLoaded) {\n\t\t\tservices = timetable.map((service) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Service\n\t\t\t\t\t\tselectedStationName={selectedStationName}\n\t\t\t\t\t\tselectedStationCode={selectedStationCode}\n\t\t\t\t\t\tkey={service.train_uid}\n\t\t\t\t\t\tdepartTime={service.aimed_departure_time}\n\t\t\t\t\t\tdestination={service.destination_name}\n\t\t\t\t\t\tserviceUrl={service.service_timetable.id}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tif (timetableLoaded) {\n\t\t\t\tservices =\n\t\t\t\t\t\"Sorry, it looks like there are no services available from this station.\";\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tthis.stationClickHandler(e, code);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<>{name}</>\n\t\t\t\t<ul>{services}</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n","import React, {Component} from \"react\";\nimport Postcode from \"./Components/Postcode\";\nimport Station from \"./Components/Station\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tlatitude: null,\n\t\t\tlongitude: null,\n\t\t\tpostcodes: [],\n\t\t\tstationList: [],\n\t\t};\n\t}\n\n\tgetCurrentLocation() {\n\t\tif (\"geolocation\" in navigator) {\n\t\t\tnavigator.geolocation.getCurrentPosition(this.success, this.error);\n\t\t}\n\t}\n\n\tsuccess = (position) => {\n\t\tthis.setState(\n\t\t\t(prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tlatitude: position.coords.latitude,\n\t\t\t\t\tlongitude: position.coords.longitude,\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst {latitude, longitude} = this.state;\n\t\t\t\tthis.getNearestStations(latitude, longitude);\n\t\t\t}\n\t\t);\n\t};\n\n\tgroupBy(arr, property) {\n\t\treturn arr.reduce(function (memo, x) {\n\t\t\tif (!memo[x[property]]) {\n\t\t\t\tmemo[x[property]] = [];\n\t\t\t}\n\t\t\tmemo[x[property]].push(x);\n\t\t\treturn memo;\n\t\t}, {});\n\t}\n\n\tgetNearestStations(latitude, longitude) {\n\t\tfetch(\n\t\t\t`https://transportapi.com/v3/uk/places.json?app_id=c15b5dbb&app_key=1cfe30d14a3934983892bed20b27e431&lat=${latitude}&lon=${longitude}&type=train_station,postcode`\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst types = this.groupBy(data.member, \"type\");\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\tpostcodes: types.postcode,\n\t\t\t\t\t\t\tstationList: types.train_station,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconsole.log(this.state);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tlet stations, postcode;\n\t\tif (!this.state.stationList.length < 1) {\n\t\t\tstations = this.state.stationList.map((station) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Station\n\t\t\t\t\t\tkey={station.station_code}\n\t\t\t\t\t\tname={station.name}\n\t\t\t\t\t\tcode={station.station_code}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tif (!this.state.postcodes.length < 1) {\n\t\t\tpostcode = this.state.postcodes[0].name;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.getCurrentLocation();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWhere am I?\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.postcodes.length > 0 ? (\n\t\t\t\t\t\t<Postcode postcode={postcode} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<ul>{stations}</ul>\n\t\t\t</>\n\t\t);\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}